{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "routeTables_route_name": {
            "defaultValue": "route",
            "type": "String"
        },
        "virtualNetworks_ass_name": {
            "defaultValue": "ass",
            "type": "String"
        },
        "dnsResolvers_resolver_name": {
            "defaultValue": "resolver",
            "type": "String"
        },
        "publicIPAddresses_new_name": {
            "defaultValue": "new",
            "type": "String"
        },
        "networkSecurityGroups_new_name": {
            "defaultValue": "new",
            "type": "String"
        },
        "storageAccounts_store2121_name": {
            "defaultValue": "store2121",
            "type": "String"
        },
        "privateEndpoints_endpoint1_name": {
            "defaultValue": "endpoint1",
            "type": "String"
        },
        "virtualNetworkGateways_new_name": {
            "defaultValue": "new",
            "type": "String"
        },
        "vaults_vault_m0h3c8e7_name": {
            "defaultValue": "vault-m0h3c8e7",
            "type": "String"
        },
        "privateDnsZones_privatelink_file_core_windows_net_name": {
            "defaultValue": "privatelink.file.core.windows.net",
            "type": "String"
        },
        "systemTopics_store2121_89cf3373_8e4d_44ae_b26e_1fe8ed6023ea_name": {
            "defaultValue": "store2121-89cf3373-8e4d-44ae-b26e-1fe8ed6023ea",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-01-01",
            "name": "[parameters('networkSecurityGroups_new_name')]",
            "location": "southindia",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowCidrBlockCustomAnyInbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_new_name'), 'AllowCidrBlockCustomAnyInbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "10.0.1.6",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allowvpnippublic",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_new_name'), 'Allowvpnippublic')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "52.140.46.27",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_privatelink_file_core_windows_net_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-01-01",
            "name": "[parameters('publicIPAddresses_new_name')]",
            "location": "southindia",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.140.46.27",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2024-01-01",
            "name": "[parameters('routeTables_route_name')]",
            "location": "southindia",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "one",
                        "id": "[resourceId(concat('Microsoft.Network/', parameters('routeTables_route_name'), 'Tables/', parameters('routeTables_route_name'), 's'), parameters('routeTables_route_name'), 'one')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "nextHopType": "VirtualNetworkGateway",
                            "hasBgpOverride": false
                        },
                        "type": "[concat('Microsoft.Network/', parameters('routeTables_route_name'), 'Tables/', parameters('routeTables_route_name'), 's')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2024-04-30-preview",
            "name": "[parameters('vaults_vault_m0h3c8e7_name')]",
            "location": "southindia",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {
                "securitySettings": {
                    "softDeleteSettings": {
                        "softDeleteRetentionPeriodInDays": 14,
                        "softDeleteState": "Enabled",
                        "enhancedSecurityState": "Enabled"
                    }
                },
                "redundancySettings": {
                    "standardTierStorageRedundancy": "GeoRedundant",
                    "crossRegionRestore": "Disabled"
                },
                "publicNetworkAccess": "Enabled",
                "restoreSettings": {
                    "crossSubscriptionRestoreSettings": {
                        "crossSubscriptionRestoreState": "Enabled"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_store2121_name')]",
            "location": "southindia",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "resourceAccessRules": [
                        {
                            "tenantId": "a4c234a0-733b-47bb-b57e-1eb0afa8d5dd",
                            "resourceId": "/subscriptions/2fda207c-9885-480b-9465-7051c8587f17/providers/Microsoft.Security/datascanners/storageDataScanner"
                        }
                    ],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [
                        {
                            "value": "52.140.46.27",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2024-06-01-preview",
            "name": "[parameters('systemTopics_store2121_89cf3373_8e4d_44ae_b26e_1fe8ed6023ea_name')]",
            "location": "southindia",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]",
                "topicType": "microsoft.storage.storageaccounts"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2024-06-01-preview",
            "name": "[concat(parameters('systemTopics_store2121_89cf3373_8e4d_44ae_b26e_1fe8ed6023ea_name'), '/StorageAntimalwareSubscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopics_store2121_89cf3373_8e4d_44ae_b26e_1fe8ed6023ea_name'))]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64,
                        "azureActiveDirectoryTenantId": "33e01921-4d64-4f8c-a055-5bdaffd5e33d",
                        "azureActiveDirectoryApplicationIdOrUri": "f1f8da5f-609a-401d-85b2-d498116b7265"
                    },
                    "endpointType": "WebHook"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ],
                    "advancedFilters": [
                        {
                            "values": [
                                "BlockBlob"
                            ],
                            "operatorType": "StringContains",
                            "key": "data.blobType"
                        }
                    ]
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.Network/dnsResolvers",
            "apiVersion": "2022-07-01",
            "name": "[parameters('dnsResolvers_resolver_name')]",
            "location": "southindia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_new_name'), '/AllowCidrBlockCustomAnyInbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_new_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "10.0.1.6",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('networkSecurityGroups_new_name'), '/Allowvpnippublic')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_new_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "52.140.46.27",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_file_core_windows_net_name'), '/store2121')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint endpoint1 with resource guid 9a5cf29d-78bb-491a-9a8f-0ea1fdb5bdd3"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_file_core_windows_net_name'), '/vpngw000000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_file_core_windows_net_name'), '/vpngw000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_file_core_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('routeTables_route_name'), '/one')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_route_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "nextHopType": "VirtualNetworkGateway",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_ass_name')]",
            "location": "southindia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_new_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "10.0.2.4"
                    ]
                },
                "subnets": [
                    {
                        "name": "resolver1",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'resolver1')]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/28",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "southindia",
                                        "centralindia",
                                        "westindia"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "Microsoft.Network.dnsResolvers",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'resolver1'), '/delegations/Microsoft.Network.dnsResolvers')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Network/dnsResolvers"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.1.0/24"
                            ],
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "southindia",
                                        "centralindia",
                                        "westindia"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'default')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.0/24"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_new_name'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "southindia",
                                        "centralindia",
                                        "westindia"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_ass_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.1.0/24"
                ],
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "southindia",
                            "centralindia",
                            "westindia"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_ass_name'), '/resolver1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/28",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "southindia",
                            "centralindia",
                            "westindia"
                        ]
                    }
                ],
                "delegations": [
                    {
                        "name": "Microsoft.Network.dnsResolvers",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'resolver1'), '/delegations/Microsoft.Network.dnsResolvers')]",
                        "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m0h3c8e7_name'), '/DailyPolicy-m0h3c8ja')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m0h3c8e7_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureStorage",
                "workLoadType": "AzureFileShare",
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2024-08-30T19:30:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-08-30T19:30:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m0h3c8e7_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m0h3c8e7_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2024-08-31T05:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-08-31T05:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m0h3c8e7_name'), '/EnhancedPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m0h3c8e7_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "policyType": "V2",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicyV2",
                    "scheduleRunFrequency": "Hourly",
                    "hourlySchedule": {
                        "interval": 4,
                        "scheduleWindowStartTime": "2024-08-31T08:00:00Z",
                        "scheduleWindowDuration": 12
                    }
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-08-31T08:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-04-30-preview",
            "name": "[concat(parameters('vaults_vault_m0h3c8e7_name'), '/HourlyLogBackup')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m0h3c8e7_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureWorkload",
                "workLoadType": "SQLDataBase",
                "settings": {
                    "timeZone": "UTC",
                    "issqlcompression": false,
                    "isCompression": false
                },
                "subProtectionPolicy": [
                    {
                        "policyType": "Full",
                        "schedulePolicy": {
                            "schedulePolicyType": "SimpleSchedulePolicy",
                            "scheduleRunFrequency": "Daily",
                            "scheduleRunTimes": [
                                "2024-08-31T05:00:00Z"
                            ],
                            "scheduleWeeklyFrequency": 0
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "LongTermRetentionPolicy",
                            "dailySchedule": {
                                "retentionTimes": [
                                    "2024-08-31T05:00:00Z"
                                ],
                                "retentionDuration": {
                                    "count": 30,
                                    "durationType": "Days"
                                }
                            }
                        }
                    },
                    {
                        "policyType": "Log",
                        "schedulePolicy": {
                            "schedulePolicyType": "LogSchedulePolicy",
                            "scheduleFrequencyInMins": 60
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "SimpleRetentionPolicy",
                            "retentionDuration": {
                                "count": 30,
                                "durationType": "Days"
                            }
                        }
                    }
                ],
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('vaults_vault_m0h3c8e7_name'), '/defaultAlertSetting')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m0h3c8e7_name'))]"
            ],
            "properties": {
                "sendToOwners": "DoNotSend",
                "customEmailAddresses": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('vaults_vault_m0h3c8e7_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_m0h3c8e7_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_store2121_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_store2121_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 14
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_store2121_name'), '/', parameters('storageAccounts_store2121_name'), '.d26285c2-cf10-46f1-b8bc-235993ec0062')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "properties": {
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-Approved",
                    "actionRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_store2121_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_store2121_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Network/dnsResolvers/inboundEndpoints",
            "apiVersion": "2022-07-01",
            "name": "[concat(parameters('dnsResolvers_resolver_name'), '/', parameters('dnsResolvers_resolver_name'), '1')]",
            "location": "southindia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnsResolvers', parameters('dnsResolvers_resolver_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'resolver1')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'resolver1')]"
                        },
                        "privateIpAddress": "10.0.2.4",
                        "privateIpAllocationMethod": "Dynamic"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_file_core_windows_net_name'), '/543msk2eycik6')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "resolutionPolicy": "Default",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-01-01",
            "name": "[parameters('privateEndpoints_endpoint1_name')]",
            "location": "southindia",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_endpoint1_name'), '_0b357333-b4f1-4ccd-b80f-2eb765419034')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_endpoint1_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_endpoint1_name'), '_0b357333-b4f1-4ccd-b80f-2eb765419034'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]",
                            "groupIds": [
                                "file"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'default')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('privateEndpoints_endpoint1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_endpoint1_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink_file_core_windows_net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_file_core_windows_net_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworkGateways_new_name')]",
            "location": "southindia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_new_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'GatewaySubnet')]"
            ],
            "properties": {
                "enablePrivateIpAddress": true,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_new_name')), '/ipConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_new_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ass_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "10.16.0.0/26"
                        ]
                    },
                    "vpnClientProtocols": [
                        "IkeV2",
                        "OpenVPN"
                    ],
                    "vpnAuthenticationTypes": [
                        "Certificate"
                    ],
                    "vpnClientRootCertificates": [
                        {
                            "name": "P2SRootCert",
                            "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_new_name')), '/vpnClientRootCertificates/P2SRootCert')]",
                            "properties": {
                                "publicCertData": "MIIC5zCCAc+gAwIBAgIQEYAkqVDZbYRLdaGlUzDXwTANBgkqhkiG9w0BAQsFADAW MRQwEgYDVQQDDAtQMlNSb290Q2VydDAeFw0yNDA4MzAxNjUzMDJaFw0yNjA4MzAx NzAyNDlaMBYxFDASBgNVBAMMC1AyU1Jvb3RDZXJ0MIIBIjANBgkqhkiG9w0BAQEF AAOCAQ8AMIIBCgKCAQEAuxWccj/Oz6yq4PVKNndtO0BKi9vC58o4nT0fXeM10WN+ wedwc9LpnblclgR69FoH15XqAYAZgfr8Nvy2nKSN5zw85m1s5tLgpbqWnjH/Cper S6JaPA1tQqsH+YQiJ4qdXnLc8yl9689knmWko1/kXpDs3kLM5vL7+9IJxs9azeeI d5+cKqR/zHtGcHfpzBfpZfgXj6hUnRtgp+IC8sX2wHFkh5V/MnQWa4GnRFn+M2wB 7eh+czRsKdN/VxJDLqDGdNiRpt3ypOIhhgpz2kw55jn1U0IFyE9QRNYulP81SwFu ON9Yf9n/4yqgDI7tbGnKmqX9Sl6ZeCQ/OQCz1uLJyQIDAQABozEwLzAOBgNVHQ8B Af8EBAMCAgQwHQYDVR0OBBYEFN4p79i2ONfIoz8/ovZNPCqjyYRKMA0GCSqGSIb3 DQEBCwUAA4IBAQA0vOtjGroWVJLVwYRYhHX17VDo9OXLcwHQgPkbYWOY48EviiWh m09Sv8f/goOWt/3fegXwOc96+wiZR6O9bS2rUn/fF2eHbvqSB23UJ/5lDrL5rbDE N9P8AecgINnAO4vi/6y6swRUcwluKfkpeAlR+B9hGf2tdCqQZkb4095DoUWh/5BM bISJJn12FJdmws8g/yekyqMuFcDQE+VMUVelcmZz7ul2HhRPoxQAS69+1AthCMDP mQ9u4UjsqBdt/YJQ6Xx7REYs8vLpHlz+/4AMOk81hzqSIzVumMVcJpsbuDWZpqRz 5H3NCfXQLjLdMFdkKFNEw9skBxU/Rfvx9Sf/"
                            }
                        }
                    ],
                    "vpnClientRevokedCertificates": [],
                    "vngClientConnectionConfigurations": [],
                    "radiusServers": [],
                    "vpnClientIpsecPolicies": []
                },
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "10.0.1.254",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_new_name')), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "customRoutes": {
                    "addressPrefixes": []
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_ass_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ass_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_new_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.0/24"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_new_name'))]"
                },
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "southindia",
                            "centralindia",
                            "westindia"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_store2121_name'), '/default/adit')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_store2121_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_store2121_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 102400,
                "enabledProtocols": "SMB"
            }
        }
    ]
}
